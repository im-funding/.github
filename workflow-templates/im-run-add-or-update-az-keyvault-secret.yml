# Workflow Code: CockySquirrel_v6    DO NOT REMOVE

# TODO: Ensure each of the repo-level and env-level secrets used in this workflow have been populated by an admin in your repository.

name: Runbook - Add or update azure keyvault secret
# TODO: You may wish to add the name of the key vault to the name above and the file name if there are multiple key vaults this repository can add secrets to

on:
  workflow_dispatch:
    inputs:
      secret_name:
        description: The name of the secret to add, azure requires it conform to the following pattern - ^[0-9a-zA-Z-]+$
        required: true
      secret_value:
        description: The value of the secret
        required: true
      environment:
        description: The environment to add the secret to - dev|qa|stage|prod|demo|uat # TODO: Update for the environments that are available
        required: true
        default: prod

jobs:
  set-vars:
    runs-on: ubuntu-latest # Force this to run on github-hosted runner by using a tag that does not exist on self-hosted runners

    # To use any of these outputs in another job use the following syntax: ${{ needs.set-vars.outputs.ENVIRONMENT }}
    outputs:
      ENVIRONMENT: ${{ steps.clean-env.outputs.ENVIRONMENT }}
      KEYVAULT_NAME: ${{ steps.set-variables.outputs.KEYVAULT_NAME }}

    steps:
      # To use this value: ${{ needs.set-vars.outputs.ENVIRONMENT }}
      - name: Set ENVIRONMENT
        id: clean-env
        uses: im-open/set-environment-variables-by-scope@v1.0.4
        with:
          scope: ${{ github.event.inputs.environment }}
          create-output-variables: true
          error-on-no-match: true
          custom-error-message: 'The environment must be Dev, QA, Stage Demo, UAT or Prod' # TODO: Update for the environments that are available
        env:
          # TODO: Update for the environments your project contains
          # The value array contains the environments it will match and the corresponding key is
          # the environment it will output if one of the values was found.  It is case insensitive.
          ENVIRONMENT@dev d development: 'dev'
          ENVIRONMENT@qa q: 'qa'
          ENVIRONMENT@stg s stage: 'stage'
          ENVIRONMENT@o demo: 'demo'
          ENVIRONMENT@u uat: 'uat'
          ENVIRONMENT@prod p production: 'prod'

      - run: echo "The current environment is ${{ steps.clean-env.outputs.ENVIRONMENT }}"

      # For more information and best practices on the usage and options available
      # for this action go to: https://github.com/im-open/set-environment-variables-by-scope#usage-instructions
      - name: Set Variables
        id: set-variables
        uses: im-open/set-environment-variables-by-scope@v1.0.4
        with:
          scope: ${{ steps.clean-env.outputs.ENVIRONMENT }}
          create-output-variables: true
        env:
          # TODO: For the following keyvault name inputs, fill in the value if you have the environment and delete the environment if it does not exist
          KEYVAULT_NAME@dev: ''
          KEYVAULT_NAME@qa: ''
          KEYVAULT_NAME@stage: ''
          KEYVAULT_NAME@demo: ''
          KEYVAULT_NAME@uat: ''
          KEYVAULT_NAME@prod: ''

  set-secret:
    runs-on: [self-hosted, ubuntu-20.04]
    needs: [set-vars]

    environment: ${{ needs.set-vars.outputs.ENVIRONMENT }}

    steps:
      - run: echo "The current environment is ${{ needs.set-vars.outputs.ENVIRONMENT }}"

      - name: Mask the secret value
        uses: actions/github-script@v4
        with:
          script: |
            core.info(`Masking the value for ${context.payload.inputs.secret_name} so it is not exposed.`);
            core.setSecret(context.payload.inputs.secret_value);

      - name: AZ Login
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # This is an env-level secret

      - name: keyvault add or update secret
        # ARM_SUBSCRIPTION_ID is an env-level secret
        run: az keyvault secret set --name ${{ github.event.inputs.secret_name }} --vault-name ${{ needs.set-vars.outputs.KEYVAULT_NAME }} --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }} --value "${{ github.event.inputs.secret_value }}"

      - name: Azure logout
        if: always() && steps.login.outcome == 'success'
        run: |
          az logout
          az cache purge
          az account clear
