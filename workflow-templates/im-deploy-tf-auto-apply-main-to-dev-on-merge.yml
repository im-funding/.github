# Workflow Code: IrritableEagle_v4    DO NOT REMOVE

name: Auto Apply main branch to Dev on PR Merge
on:
  pull_request:
    types: [closed]
    paths:
      - 'common/**'
      - 'dev/**'
      - 'qa/**'
      - 'stage/**'
      - 'prod/**'

env:
  PAGERDUTY_SERVICE_IDS: '[ "${{ secrets.PAGERDUTY_SERVICE_ID }}" ]' # TODO:  Add your PD Service IDs here, the svc id usually has a format of P0XXXXX
  PAGERDUTY_WINDOW_IN_MIN: 10 # TODO:  Verify the length of your PD Maintenance Window
  PAGERDUTY_WINDOW_DESC: 'Auto apply main branch to Dev environment from GitHub Actions' # TODO:  Verify this description
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_ENVIRONMENT: 'public'
  TF_IN_AUTOMATION: 'true'
  TF_VERSION: '~>1.0.5' #TODO:  Verify your version of terraform.
  TF_WORKING_DIR: './dev' # TODO:  Verify this directory is correct for your repository
  SSH_KEY_CENTRAL_LOGGING: ${{ secrets.SSH_CENTRAL_LOGGING }} # This is an org level secret
  SSH_KEY_STORAGE_ACCOUNT: ${{ secrets.SSH_STORAGE_ACCOUNT }} # This is an org level secret
  SSH_KEY_NETWORK_INFO: ${{ secrets.SSH_NETWORK_INFO }} # This is an org level secret
  # TODO:  If the terraform is still using on-prem-egress-ips, it needs to be switched to network-information.

jobs:
  auto-apply-tf:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'

    runs-on: [self-hosted, ubuntu-20.04]

    environment: 'Dev'

    defaults:
      run:
        shell: bash
        working-directory: '${{ env.TF_WORKING_DIR }}'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Allows pulling modules from the repo instead of artifactory
      - name: Setup SSH Keys and known_hosts
        uses: im-open/setup-deploy-keys@1.0.1
        with:
          deploy-key-info: |
            [
              { "orgAndRepo": "im-platform/central-logging", "envName" : "SSH_KEY_CENTRAL_LOGGING" },
              { "orgAndRepo": "im-platform/storage-account-network-rules", "envName" : "SSH_KEY_STORAGE_ACCOUNT" },
              { "orgAndRepo": "im-platform/network-information", "envName" : "SSH_KEY_NETWORK_INFO" }
            ]

      - name: Setup Terraform
        id: setup
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: '${{ env.TF_VERSION }}'

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Open a PagerDuty Maintenance Window
        id: open-window
        uses: im-open/open-pagerduty-maintenance-window@v1.0.0
        with:
          pagerduty-api-key: ${{ secrets.PAGERDUTY_API_KEY }} # This is an org level secret
          description: '${{ env.PAGERDUTY_WINDOW_DESC }}'
          minutes: ${{ env.PAGERDUTY_WINDOW_IN_MIN }}
          service-ids: ${{ env.PAGERDUTY_SERVICE_IDS }}

      # TODO:  Remove the pagerduty token if not configuring pagerduty.  If using pagerduty verify 'pagerduty_token' is the name of the variable that tf expects
      # TODO:  Add any other secrets that would be required for a tf plan to succeed.  Since this is a multi-line command every line except the last will need a \ on the end of it
      # PAGERDUTY_API_KEY is an organization-level secret
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="pagerduty_token=${{ secrets.PAGERDUTY_API_KEY }}"

      - name: Close the PagerDuty Maintenance Window
        uses: im-open/close-pagerduty-maintenance-window@v1.0.0
        with:
          pagerduty-api-key: ${{ secrets.PAGERDUTY_API_KEY }} # This is an org level secret
          maintenance-window-id: ${{ steps.open-window.outputs.maintenance-window-id }}

      # TODO:  Remove this step if you do not want a teams notification
      - name: Send Status to Teams
        if: always()
        uses: im-open/post-status-to-teams-action@v1.0.0
        with:
          title: Auto-Deploying <project-name> Terraform to Dev # TODO:  Verify title
          workflow-status: ${{ job.status }}
          workflow-type: Deploy
          teams-uri: ${{ secrets.MS_TEAMS_URI }} # TODO:  Verify this secret exists in GitHub
          timezone: America/Denver # TODO:  Verify timezone
          # TODO:  Verify the custom facts you want included
          custom-facts: |
            [
              { "name": "Event", "value": "${{ github.event_name }}" },
              { "name": "Workflow", "value": "${{ github.workflow }}" },
              { "name": "Run", "value": "${{ github.run_id }}" },
              { "name": "Actor", "value": "${{ github.actor }}" }
            ]
          # TODO:  Verify additional buttons you want included.  A View Build Log is included by default.  If no additional actions are needed, delete this arg.
          custom-actions: |
            [
              { "name": "", "uri": "" }
            ]

      # TODO: Remove if not using an automated deployment project board
      # https://github.com/im-practices/git-er-done/blob/main/actions/deployment-board.md
      - name: Update Deployment Board
        if: always()
        uses: im-open/update-deployment-board@v1.0.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          environment: 'Dev'
          board-number: '' # TODO: Add the automated deployment board number
          ref: 'main'
          deploy-status: ${{ job.status }}
          timezone: 'america/denver'
